MONITORS = { 

    'Web Applications' : {
        'HTTP/s GET' : {
            'description' : 'Perform and HTTP or HTTPS GET request and validate the HTTP status code returned matches expected values. This monitor allows you to specify multiple expected status codes as well as additional HTTP headers such as host or User-Agent.',
            'create_link' : '/dashboard/monitors/http-get-statuscode',
        },
        'HTTP/s POST' : {
            'description' : 'Perform and HTTP or HTTPS POST request and validate the HTTP status code and data matches expected values. This monitor allows you to specify multiple expected status codes, HTTP headers such as host or User-Agent, and POST data.',
            'create_link' : '/dashboard/monitors/http-post',
        },
        'HTTP/s Keyword Search' : {
            'description' : 'Perform an HTTP or HTTPS GET request and validate the returned data via a keyword search. Keywords can be Regular Expressions or string matching.',
            'create_link' : '/dashboard/monitors/http-keyword',
        },
    },


    'Network Availability' : {
        'TCP Port' : {
            'description' : 'Validates that a TCP port is open and listening by establishing a TCP connection to the defined port. Connection will timeout after 3 seconds.',
            'create_link' : '/dashboard/monitors/tcp-check',
            },
        'ICMP Ping' : {
            'description' : 'Validates that an IP is responding to ICMP echo requests.',
            'create_link' : '/dashboard/monitors/ping',
        }
    },


    'Server & Application Monitoring' : {
        'Datadog Alerts Webhook' : {
            'description' : 'The Datadog: Webhook Monitor is a webhook-based Monitor. This type of Monitor does not run at a regular interval, but rather listens on a unique URL for webhook requests. Within Datadog you can setup an integration for webhook requests. When defining metric alerts within Datadog you can simply tag the webhook integrations. When an alert is triggered, Datadog will then send a webhook to the unique URL provided. This Monitor allows users to integrate Runbook Reactions with existing monitoring systems. It also allows users to monitor local system status that Runbook would not be able to see externally.',
            'create_link' : '/dashboard/monitors/datadog-webhook',
        },
        'Execute Shell Command' : {
            'description' : 'This monitor provides a method of executing an arbitrary shell command, script or series of commands on a remote host over SSH.',
            'create_link' : '/dashboard/monitors/execute-shell-command',
        },
        'Docker Container is Running' : {
            'description' : 'Use this monitor to verify whether a Docker container is running or not. This monitor is performed by establishing an SSH connection to the target server.',
            'create_link' : '/dashboard/monitors/docker-container-running',
        },
        'Swap Space Usage' : {
            'description' : 'This monitor opens an SSH connection to the specified server and checks whether the amount of swap space used is greater than the defined threshold. If swap used is beyond threshold this monitor will return False, other wise this monitor will return True',
            'create_link' : '/dashboard/monitors/swap-used',
        },
        'Free Memory' : {
            'description' : 'This monitor opens an SSH connection to the specified server and checks whether the amount of memory free is less than the defined threshold.',
            'create_link' : '/dashboard/monitors/free-memory',
        },
        '1 Minute Load Average' : {
            'description' : 'This monitor opens an SSH connection to the specified server and checks whether the 1 minute load average is greater than the defined threshold. If the load average is beyond the threshold the monitor will return False, other wise this monitor will return True',
            'create_link' : '/dashboard/monitors/load-average',
        },
    },


    'Log Management & Analysis' : {
        'Papertrail Alerts Webhook' : {
            'description' : 'Users of PaperTrail can define unique Alerts that call outside services such as email, PagerDuty, or even a generic webhook. This Monitor will create a unique webhook endpoint that you can configure PaperTrail to call when it detects an Alert. This integration allows you to combine Runbook Reactions with PaperTrail alerts.',
            'create_link' : '/dashboard/monitors/papertrail-webhook',
        },
        'Logentries Alerts Webhook' : {
            'description' : 'Users of Logentries can define unique Alerts that call outside services such as email, PagerDuty, or even a generic webhook. This Monitor will create a unique webhook endpoint that you can configure Logentries to call when it detects an Alert. This integration allows you to combine Runbook Reactions with Logentries alerts.',
            'create_link' : '/dashboard/monitors/logentries-webhook',
        },
    },

    'Meta' : {
        'Runbook Webhook' : {
            'description' : 'This Monitor is a generic webhook that is specific to Runbook. When created, this Monitor will provide the user with a unique URL and token that allows the user to signify if the Monitor is true or false. While most webhook listeners do not provide information back, this webhook listener is different. It is also possible to query the current state of the Monitor from this webhook URL.',
            'create_link' : '/dashboard/monitors/cr-api',
        },
    },


    'SSL' : {
        'Certificate Expiration' : {
            'description' : 'The SSL Not Expired Monitor can be used to validate that an SSL certificate is not expired. This Monitor allows you to define a custom number of days before expiration. When the expiration date is within the specified number of days the Monitor will return a False status. All other times, the Monitor will return a True status.',
            'create_link' : '/dashboard/monitors/ssl-certificate-expiry',
        },
        'Common Name Validation' : {
            'description' : 'The SSL Common Name Monitor can be used to validate that the common name provided when requesting a certificate matches the expected common name. If the certificates common name does not match the exepected common name value the Monitor will return a False status. Currently, this Monitor does not support SNI certificates.',
            'create_link' : '/dashboard/monitors/ssl-common-name',
        },
    },


   'Cloud Servers' : {
        'DigitalOcean Droplet Status' : {
            'description' : 'The Droplet Status allows you to monitor status changes to a specified Droplet. This monitor will request the droplet status from DigitalOcean via their API, if the droplet status matches a selected status the monitor will return True. If the returned status is not selected the monitor will return False.',
            'create_link' : '/dashboard/monitors/digitalocean-status',
        },
        'DigitalOcean Recent Snapshot' : {
            'description' : 'The Recent Snapshot monitor allows you to monitor specific droplets to identify whether a snapshot has recently been taken.',
            'create_link' : '/dashboard/monitors/digitalocean-snapshot',
        },
        'Linode Server Status' : {
            'description' : 'The Linode Server Status monitor allows you to monitor the status of a specified Linode server. This monitor will request the server status from Linode via their API, if the server status matches a selected status the monitor will return True. If the returned status is not selected the monitor will return False.',
            'create_link' : '/dashboard/monitors/linode-status',
        },
    },


  'Chat Services' : {
      'Slack Webhook' : {
            'description' : 'Integrate your Slack channels with Runbook via Slack outgoing webhooks or Slack commands. When calling these monitors from Slack you will receive a response validating that we have recieved it.',
            'create_link' : '/dashboard/monitors/slack-webhook',
      },
  },

  'DNS Services' : {
      'CloudFlare HTTP Status Codes' : {
            'description' : 'Use CloudFlare\'s analytics to detect an increase in specified HTTP Status Codes. This monitor can be used to detect if more than a defined percentage of requests are error codes, success, or anything else. An example would be to identify is more than 20% of HTTP requests are 500 errors.',
            'create_link' : '/dashboard/monitors/cloudflare-http-codes',
            'logo_link' : 'cloudflare.png',
      },
      'CloudFlare Increase in Traffic' : {
            'description' : 'Use CloudFlare\'s analytics to detect an increase in HTTP requests. With this monitor you can detect when your site has an increase in HTTP traffic. This monitor could be useful with Scaling reactions',
            'create_link' : '/dashboard/monitors/cloudflare-traffic-increase',
            'logo_link' : 'cloudflare.png',
      },
      'CloudFlare Decrease in Traffic' : {
            'description' : 'Use CloudFlare\'s analytics to detect a decrease in HTTP requests. With this monitor you can detect when your site has decreased in HTTP traffic. This monitor could be useful with Scaling reactions.',
            'create_link' : '/dashboard/monitors/cloudflare-traffic-decrease',
            'logo_link' : 'cloudflare.png',
      },
  },
            

    'Cloud Application Platforms' : {
        'Heroku Dyno Status' : {
            'description' : 'The Dyno Status (Single) Monitor uses the Heroku platform API to poll the state of a single dyno. If the returned state is anything other than up or idle, the Monitor is marked as false. This Monitor can be utilized to detect application crashes or infrastructure issues within Heroku.',
            'create_link' : '/dashboard/monitors/heroku-dyno-status-single',
        },
        'Heroku Dyno Status (All Dynos)' : {
            'description' : 'The Dyno Status Monitor uses the Heroku platform API to poll the state of all dynos attached to the specified application. If the returned state is anything other than up or idle on any dyno, the Monitor is marked as false. This Monitor can be utilized to detect application crashes or infrastructure issues within Heroku.',
            'create_link' : '/dashboard/monitors/heroku-dyno-status',
        },
        'Heroku Dyno Not Idle' : {
            'description' : 'The Dyno Not Idle (Single) Monitor uses the Heroku platform API to poll the state of a single dyno. If the returned state of any dyno is idle, the Monitor will be marked as false. This Monitor can be used to detect when dynos are over provisioned and not receiving enough traffic.',
            'create_link' : '/dashboard/monitors/heroku-dyno-not-idle-single',
        },
        'Heroku Dyno Not Idle (All Dynos)' : {
            'description' : 'The Dyno Not Idle Monitor uses the Heroku platform API to poll the state of all dynos attached to the specified application. If the returned state of any dyno is idle, the Monitor will be marked as false. This Monitor can be used to detect when dynos are over provisioned and not receiving enough traffic.',
            'create_link' : '/dashboard/monitors/heroku-dyno-not-idle',
        },
    },
}
